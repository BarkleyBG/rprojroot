% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/root.R, R/rrmake.R
\name{find_root}
\alias{find_package_root}
\alias{find_root}
\alias{find_rstudio_root}
\alias{make_find_root}
\title{Find the root of a directory hierarchy}
\usage{
find_root(filename, contents = NULL, n = -1L, ..., path = getwd())

make_find_root(filename, contents = NULL, n = -1L)

find_rstudio_root(..., path = getwd())

find_package_root(..., path = getwd())
}
\arguments{
\item{filename,contents}{Regular expressions to match the file name or contents}

\item{n}{integer.  The (maximal) number of lines to
    read.  Negative values indicate that one should read up to the end of
    input on the connection.}

\item{...}{Additional arguments passed to \code{\link{file.path}}}

\item{path}{The start directory}
}
\value{
The normalized path of the root as specified by the search criteria.
  Throws an error if no root is found
}
\description{
A \emph{root} is defined as a directory that contains a regular file
whose name matches a given pattern and which optionally contains a given text.
The search for a root starts at a given directory (the working directory
by default), and proceeds up the directory hierarchy.
}
\details{
Starting from the working directory, the \code{find_root} function searches
for the root.
If a root is found, the \code{...} arguments are used to construct a path;
thus, if no extra arguments are given, the root is returned.
If no root is found, an error is thrown.

The function \code{make_find_root} can be used to create shorthand functions
such as \code{find_rstudio_root} and \code{find_package_root}.
}
\seealso{
\code{\link[utils]{glob2rx}} \code{\link{file.path}}
}

